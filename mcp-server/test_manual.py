"""Manual test script to verify MCP server works with the API."""

import asyncio
from mcp_golive.server import submit_report, list_servers


async def main():
    print("=" * 70)
    print("MCP Go-Live Server Manual Test")
    print("=" * 70)

    # Test 1: Submit a report
    print("\n[Test 1] Submitting a test report...")
    submit_args = {
        "server_name": "mcp-test-manual",
        "repository_url": f"https://github.com/test/manual-test-{asyncio.get_event_loop().time()}",
        "developer_email": "test@intility.no",
        "report_markdown": """# Manual Test Report

## Security Checklist
- [x] Lethal trifecta analyzed
- [x] No private data exposure
- [x] Proper authentication

## Infrastructure
- [x] Repository created
- [x] README complete
- [x] Dependencies reviewed

This is a manual test report generated by test_manual.py.
""",
    }

    submit_result = await submit_report(submit_args)
    print("\nSubmit Result:")
    print(submit_result[0].text)

    # Test 2: List all servers
    print("\n" + "=" * 70)
    print("[Test 2] Listing all servers...")
    list_args = {"status": "all"}
    list_result = await list_servers(list_args)
    print("\nList Result:")
    print(list_result[0].text)

    # Test 3: List pending reviews
    print("\n" + "=" * 70)
    print("[Test 3] Listing pending reviews...")
    pending_args = {"status": "pending_review"}
    pending_result = await list_servers(pending_args)
    print("\nPending Reviews:")
    print(pending_result[0].text)

    print("\n" + "=" * 70)
    print("Manual tests complete!")
    print("=" * 70)


if __name__ == "__main__":
    asyncio.run(main())
